{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction AppComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 9);\n  }\n  if (rf & 2) {\n    const star_r1 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"left\", star_r1.x, \"px\")(\"top\", star_r1.y, \"px\");\n    i0.ɵɵproperty(\"ngClass\", star_r1.type === \"shootingStar\" ? \"superstar\" : \"star\");\n  }\n}\nfunction AppComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 10);\n  }\n  if (rf & 2) {\n    const meteor_r2 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"left\", meteor_r2.x, \"px\")(\"top\", meteor_r2.y, \"px\");\n  }\n}\nfunction AppComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"h2\");\n    i0.ɵɵtext(2, \"Juego Terminado\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function AppComponent_div_13_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.restartGame());\n    });\n    i0.ɵɵtext(6, \"Reiniciar\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"Puntaje final: \", ctx_r3.score, \"\");\n  }\n}\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    title = 'Recolecta las Estrellas';\n    playerPosition = {\n      x: 220,\n      y: 520\n    };\n    stars = [];\n    meteors = [];\n    score = 0;\n    lives = 3;\n    level = 1;\n    maxLevel = 5;\n    gameOver = false;\n    isImmune = false;\n    starCounter = 0;\n    meteorCounter = 0;\n    immunityTimeoutId = null;\n    gameLoopId = null;\n    playerSize = 80;\n    gameWidth = 500;\n    gameHeight = 600;\n    ngOnInit() {\n      this.startGameLoop();\n    }\n    ngOnDestroy() {\n      if (this.gameLoopId) cancelAnimationFrame(this.gameLoopId);\n      if (this.immunityTimeoutId) clearTimeout(this.immunityTimeoutId);\n    }\n    handleKeyboardEvent(event) {\n      if (this.gameOver) return;\n      const speed = 6;\n      switch (event.key) {\n        case 'ArrowLeft':\n          this.playerPosition.x = Math.max(0, this.playerPosition.x - speed);\n          break;\n        case 'ArrowRight':\n          this.playerPosition.x = Math.min(this.gameWidth - this.playerSize, this.playerPosition.x + speed);\n          break;\n        case 'ArrowUp':\n          this.playerPosition.y = Math.max(0, this.playerPosition.y - speed);\n          event.preventDefault();\n          break;\n        case 'ArrowDown':\n          this.playerPosition.y = Math.min(this.gameHeight - this.playerSize, this.playerPosition.y + speed);\n          event.preventDefault();\n          break;\n      }\n    }\n    handleTouchMove(event) {\n      if (this.gameOver) return;\n      const touch = event.touches[0];\n      const gameArea = document.querySelector('.game-area');\n      if (!gameArea) return;\n      const rect = gameArea.getBoundingClientRect();\n      const x = touch.clientX - rect.left;\n      const y = touch.clientY - rect.top;\n      this.playerPosition.x = Math.max(0, Math.min(this.gameWidth - this.playerSize, x));\n      this.playerPosition.y = Math.max(0, Math.min(this.gameHeight - this.playerSize, y));\n      event.preventDefault();\n    }\n    startGameLoop() {\n      if (this.gameLoopId) cancelAnimationFrame(this.gameLoopId);\n      const gameLoop = () => {\n        if (this.gameOver) return;\n        const spawnStarProb = 0.008 + (this.level - 1) * 0.005;\n        const spawnMeteorProb = 0.006 + (this.level - 1) * 0.004;\n        if (Math.random() < spawnStarProb) {\n          this.stars.push({\n            x: Math.random() * (this.gameWidth - 40),\n            y: 0,\n            id: this.starCounter++,\n            type: Math.random() < 0.15 ? 'shootingStar' : 'star'\n          });\n        }\n        if (Math.random() < spawnMeteorProb) {\n          this.meteors.push({\n            x: Math.random() * (this.gameWidth - 60),\n            y: 0,\n            id: this.meteorCounter++\n          });\n        }\n        const starSpeed = 1 + (this.level - 1) * 0.5;\n        const meteorSpeed = 1.2 + (this.level - 1) * 0.6;\n        this.stars = this.stars.map(star => ({\n          ...star,\n          y: star.y + starSpeed\n        })).filter(star => star.y <= this.gameHeight);\n        this.meteors = this.meteors.map(meteor => ({\n          ...meteor,\n          y: meteor.y + meteorSpeed\n        })).filter(meteor => meteor.y <= this.gameHeight);\n        this.handleStarCollisions();\n        this.handleMeteorCollisions();\n        // Avanza nivel o termina el juego si es nivel máximo\n        if (this.score >= this.level * 100) {\n          if (this.level < this.maxLevel) {\n            this.level++;\n          } else {\n            this.gameOver = true;\n          }\n        }\n        this.gameLoopId = requestAnimationFrame(gameLoop);\n      };\n      this.gameLoopId = requestAnimationFrame(gameLoop);\n    }\n    handleStarCollisions() {\n      this.stars = this.stars.filter(star => {\n        const size = star.type === 'shootingStar' ? 35 : 20;\n        const collision = this.checkCollision(star.x, star.y, size);\n        if (collision) {\n          if (star.type === 'shootingStar') {\n            this.score += 50;\n            this.isImmune = true;\n            if (this.immunityTimeoutId) clearTimeout(this.immunityTimeoutId);\n            this.immunityTimeoutId = setTimeout(() => this.isImmune = false, 20000);\n          } else {\n            this.score += 10;\n          }\n          return false;\n        }\n        return true;\n      });\n    }\n    handleMeteorCollisions() {\n      this.meteors = this.meteors.filter(meteor => {\n        const collision = this.checkCollision(meteor.x, meteor.y, 60);\n        if (collision && !this.isImmune) {\n          this.lives--;\n          if (this.lives <= 0) this.gameOver = true;\n          return false;\n        }\n        return true;\n      });\n    }\n    checkCollision(objX, objY, objSize) {\n      const dx = this.playerPosition.x + this.playerSize / 2 - (objX + objSize / 2);\n      const dy = this.playerPosition.y + this.playerSize / 2 - (objY + objSize / 2);\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      return distance < this.playerSize / 2 + objSize / 2;\n    }\n    restartGame() {\n      this.score = 0;\n      this.lives = 3;\n      this.level = 1;\n      this.stars = [];\n      this.meteors = [];\n      this.playerPosition = {\n        x: 220,\n        y: 520\n      };\n      this.title = 'Recolecta las Estrellas';\n      this.gameOver = false;\n      this.isImmune = false;\n      if (this.immunityTimeoutId) clearTimeout(this.immunityTimeoutId);\n      if (this.gameLoopId) cancelAnimationFrame(this.gameLoopId);\n      this.startGameLoop();\n    }\n    static ɵfac = function AppComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AppComponent)();\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      hostBindings: function AppComponent_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"keydown\", function AppComponent_keydown_HostBindingHandler($event) {\n            return ctx.handleKeyboardEvent($event);\n          }, false, i0.ɵɵresolveDocument)(\"touchmove\", function AppComponent_touchmove_HostBindingHandler($event) {\n            return ctx.handleTouchMove($event);\n          }, false, i0.ɵɵresolveDocument);\n        }\n      },\n      decls: 14,\n      vars: 13,\n      consts: [[1, \"container\"], [1, \"stats\"], [1, \"score\"], [1, \"game-area\", 3, \"touchmove\"], [1, \"space-background\"], [1, \"player\"], [3, \"ngClass\", \"left\", \"top\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"meteor\", 3, \"left\", \"top\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"game-over\", 4, \"ngIf\"], [3, \"ngClass\"], [1, \"meteor\"], [1, \"game-over\"], [3, \"click\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n          i0.ɵɵtext(2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 1);\n          i0.ɵɵtext(4, \" Puntos: \");\n          i0.ɵɵelementStart(5, \"span\", 2);\n          i0.ɵɵtext(6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"div\", 3);\n          i0.ɵɵlistener(\"touchmove\", function AppComponent_Template_div_touchmove_8_listener($event) {\n            return ctx.handleTouchMove($event);\n          });\n          i0.ɵɵelement(9, \"div\", 4)(10, \"div\", 5);\n          i0.ɵɵtemplate(11, AppComponent_div_11_Template, 1, 5, \"div\", 6)(12, AppComponent_div_12_Template, 1, 4, \"div\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(13, AppComponent_div_13_Template, 7, 1, \"div\", 8);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.title);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate(ctx.score);\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate2(\" | Vidas: \", ctx.lives, \" | Nivel: \", ctx.level, \" \");\n          i0.ɵɵadvance(3);\n          i0.ɵɵstyleProp(\"left\", ctx.playerPosition.x, \"px\")(\"top\", ctx.playerPosition.y, \"px\");\n          i0.ɵɵclassProp(\"immune\", ctx.isImmune);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngForOf\", ctx.stars);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngForOf\", ctx.meteors);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.gameOver);\n        }\n      },\n      dependencies: [CommonModule, i1.NgClass, i1.NgForOf, i1.NgIf],\n      styles: [\".container[_ngcontent-%COMP%]{width:500px;margin:0 auto;font-family:Segoe UI,Tahoma,Geneva,Verdana,sans-serif;color:#fff;-webkit-user-select:none;user-select:none;background-color:#0a0a23;border-radius:10px;padding:10px}h1[_ngcontent-%COMP%]{text-align:center;margin-bottom:10px;font-size:24px}.stats[_ngcontent-%COMP%]{text-align:center;margin-bottom:10px;font-weight:700;font-size:18px}.score[_ngcontent-%COMP%]{color:#ffdf00}.game-area[_ngcontent-%COMP%]{position:relative;width:500px;height:600px;border:2px solid #444;overflow:hidden;background-color:#000a1a;border-radius:8px;touch-action:none}.space-background[_ngcontent-%COMP%]{position:absolute;width:100%;height:100%;background-image:url(space-background.c8c6ffbe62b40567.png);background-size:cover;opacity:.5;z-index:0}.player[_ngcontent-%COMP%]{position:absolute;width:80px;height:80px;background-image:url(lindoastro.e2a1e245de75c096.png);background-size:contain;background-repeat:no-repeat;transition:left .05s,top .05s;z-index:10;border-radius:10px;box-shadow:0 0 15px 2px #ffffffb3}.player.immune[_ngcontent-%COMP%]{filter:drop-shadow(0 0 8px cyan);animation:_ngcontent-%COMP%_blink 1s infinite alternate}@keyframes _ngcontent-%COMP%_blink{0%{filter:drop-shadow(0 0 8px cyan)}to{filter:drop-shadow(0 0 15px cyan)}}.star[_ngcontent-%COMP%]{position:absolute;width:20px;height:20px;background-image:url(star.eb0a57d36dc18179.png);background-size:contain;background-repeat:no-repeat;z-index:5}.superstar[_ngcontent-%COMP%]{position:absolute;width:35px;height:35px;background-image:url(superstar.dee97391547c901c.png);background-size:contain;background-repeat:no-repeat;z-index:6;filter:drop-shadow(0 0 6px white)}.meteor[_ngcontent-%COMP%]{position:absolute;width:60px;height:60px;background-image:url(meteor.695ca06ba4aa5b94.png);background-size:contain;background-repeat:no-repeat;z-index:7;opacity:1}.game-over[_ngcontent-%COMP%]{position:absolute;top:40%;left:50%;transform:translate(-50%,-50%);background:#141428e6;border-radius:10px;padding:25px;text-align:center;width:80%;color:#f44;font-weight:700;z-index:20}.game-over[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin-bottom:15px;font-size:28px}.game-over[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background-color:#f44;border:none;padding:10px 20px;font-size:18px;color:#fff;cursor:pointer;border-radius:6px}.game-over[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background-color:#c33}[_nghost-%COMP%]{display:block;background-color:transparent}\"]\n    });\n  }\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}